"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5579],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),s=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),f=r,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||i;return n?o.createElement(m,a(a({ref:t},c),{},{components:n})):o.createElement(m,a({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7797:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),a=["components"],l={id:"About",title:"About FLINT Cloud"},u=void 0,s={unversionedId:"FLINT-Cloud/About",id:"FLINT-Cloud/About",isDocsHomePage:!1,title:"About FLINT Cloud",description:"Purpose and Overview",source:"@site/docs/04-FLINT-Cloud/About.mdx",sourceDirName:"04-FLINT-Cloud",slug:"/FLINT-Cloud/About",permalink:"/InVEST-Cities-in-Nature/docs/FLINT-Cloud/About",editUrl:"https://github.com/XiaogangHe/InVEST-Cities-in-Nature/tree/main/website/docs/04-FLINT-Cloud/About.mdx",tags:[],version:"current",frontMatter:{id:"About",title:"About FLINT Cloud"},sidebar:"tutorialSidebar",previous:{title:"InVEST Urban Cooling",permalink:"/InVEST-Cities-in-Nature/docs/FLINT/About-Invest-Urban-Cooling"},next:{title:"FLINT Cloud Changelog",permalink:"/InVEST-Cities-in-Nature/docs/FLINT-Cloud/FLINT-Cloud-Changelog"}},c=[{value:"Purpose and Overview",id:"purpose-and-overview",children:[],level:2},{value:"Project Goals",id:"project-goals",children:[],level:2},{value:"Project Features",id:"project-features",children:[],level:2}],d={toc:c};function p(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"purpose-and-overview"},"Purpose and Overview"),(0,i.kt)("p",null,"The Full Lands INtegration Tool (FLINT) is a platform for estimating greenhouse gas emissions at local, national and global scales."),(0,i.kt)("p",null,"This project aims to build a cloud deployment framework for rapid deployment of FLINT implementations. This framework will be used in a continuous deployment pipeline (CD) for integration testing and the delivery of FLINT as a service (FLINTcloud) for demonstration purposes."),(0,i.kt)("p",null,"We hope to offer an easy entry point for new users to evaluate the FLINT platform and provide a blueprint for new users to roll their own FLINTcloud deployments. This is critical to help drive the adoption of FLINT and help scale up the monitoring, reporting and validation of carbon emissions and sequestration from land use and land use change around the world."),(0,i.kt)("h2",{id:"project-goals"},"Project Goals"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Publishing a design for the complete FLINTcloud solution, detailing the required components, technologies and endpoints to be exposed."),(0,i.kt)("li",{parentName:"ol"},"Exposing the core FLINT routines by wrapping the existing command line interface in a REST API."),(0,i.kt)("li",{parentName:"ol"},"Creating a simple script to install the prerequisite libraries, FLINT and its modules as a standalone microservice."),(0,i.kt)("li",{parentName:"ol"},"Creating the deployment framework and setting up a CD pipeline on commodity cloud hardware, favouring automation wherever possible (e.g. infrastructure-as-code). "),(0,i.kt)("li",{parentName:"ol"},"Providing new documentation for the cloud deployment procedure.")),(0,i.kt)("h2",{id:"project-features"},"Project Features"),(0,i.kt)("p",null,"FLINT.Cloud is a cloud-based service for FLINT. It allows users to run simulations on the cloud and get results back along with simplifying the installation and configuration of FLINT."),(0,i.kt)("p",null,"The project builds a build a continuous deployment pipeline to offer FLINT as a SaaS over cloud. The FLINT-GCBM scripts are converted to a REST API service built using Flask. This API Service is designed to be consumed by the FLINT UI and the infrastructure has been deployed using Google Cloud."))}p.isMDXComponent=!0}}]);