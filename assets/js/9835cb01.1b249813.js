"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5321],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),p=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=p(r),f=n,d=g["".concat(s,".").concat(f)]||g[f]||c[f]||i;return r?o.createElement(d,a(a({ref:t},u),{},{components:r})):o.createElement(d,a({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}g.displayName="MDXCreateElement"},8547:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return g}});var o=r(7462),n=r(3366),i=(r(7294),r(3905)),a=["components"],l={id:"FLINT-Reporting-Tool",title:"About FLINT Reporting Tool"},s=void 0,p={unversionedId:"FLINT-Reporting-Tool/FLINT-Reporting-Tool",id:"FLINT-Reporting-Tool/FLINT-Reporting-Tool",isDocsHomePage:!1,title:"About FLINT Reporting Tool",description:"Purpose and Overview",source:"@site/docs/05-FLINT-Reporting-Tool/About.mdx",sourceDirName:"05-FLINT-Reporting-Tool",slug:"/FLINT-Reporting-Tool/FLINT-Reporting-Tool",permalink:"/InVEST-Cities-in-Nature/docs/FLINT-Reporting-Tool/FLINT-Reporting-Tool",editUrl:"https://github.com/XiaogangHe/InVEST-Cities-in-Nature/tree/main/website/docs/05-FLINT-Reporting-Tool/About.mdx",tags:[],version:"current",frontMatter:{id:"FLINT-Reporting-Tool",title:"About FLINT Reporting Tool"},sidebar:"tutorialSidebar",previous:{title:"FLINT Cloud Changelog",permalink:"/InVEST-Cities-in-Nature/docs/FLINT-Cloud/FLINT-Cloud-Changelog"},next:{title:"About FLINT-UI",permalink:"/InVEST-Cities-in-Nature/docs/FLINT-UI/FLINT-UI"}},u=[{value:"Purpose and Overview",id:"purpose-and-overview",children:[],level:2},{value:"Project Features",id:"project-features",children:[],level:2}],c={toc:u};function g(e){var t=e.components,r=(0,n.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"purpose-and-overview"},"Purpose and Overview"),(0,i.kt)("p",null,"FLINT Reporting Tool provides business intelligence for analysing and transforming FLINT output databases into useful information and outputs. The current implementation of the Reporting Tool processes the Flux database into simplified 2006 GL Reporting Tables."),(0,i.kt)("p",null,"The Reporting Tool was simply brought together to support the generation of tables, graphs, and other reporting artefacts, from the FLINT output databases, to meet policy and other reporting requirements."),(0,i.kt)("p",null,"The support for these reporting requirements was not envisioned to happen all at once; but rather in a piece by piece manner, with the first version of the Reporting Tool (the current version) supporting the generation of UNFCCC CRF tables."),(0,i.kt)("h2",{id:"project-features"},"Project Features"),(0,i.kt)("p",null,"Reporting Tool takes flux facts and assigns/aggregates them to a land-use category, a reporting table and a UNFCCC reporting variable. To do this:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The Reporting Tool first implements a process that allocates a flux to an IPCC Land Use Category: This is identified as the Land Use Decision Process."),(0,i.kt)("li",{parentName:"ol"},"Secondly, it implements a process to allocate the flux to a 2006 GL Reporting Table: This is identified as the Flux Type to Reporting Table Process."),(0,i.kt)("li",{parentName:"ol"},"Finally, it aggregates the fluxes according to the UNFCCC variable: This is simply identified as the Aggregation Process.")))}g.isMDXComponent=!0}}]);